/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.cidenet.hulkstore.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.cidenet.hulkstore.dao.KardexDao;
import com.cidenet.hulkstore.dto.Kardex;
import com.cidenet.hulkstore.exceptions.KardexDaoException;
import com.cidenet.hulkstore.factory.KardexDaoFactory;

public class KardexDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByProduct(0);
		// findByStore(0);
		// findWhereProductIdEquals(0);
		// findWhereStoreIdEquals(0);
		// findWhereQuantityEquals(0);
		// findWhereUnityValueEquals(0);
		// findWhereTotalValueEquals(0);
		// findWhereStateEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByProduct'
	 * 
	 * @param productId
	 */
	public static void findByProduct(int productId)
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findByProduct(productId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByStore'
	 * 
	 * @param storeId
	 */
	public static void findByStore(int storeId)
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findByStore(storeId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProductIdEquals'
	 * 
	 * @param productId
	 */
	public static void findWhereProductIdEquals(int productId)
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findWhereProductIdEquals(productId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStoreIdEquals'
	 * 
	 * @param storeId
	 */
	public static void findWhereStoreIdEquals(int storeId)
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findWhereStoreIdEquals(storeId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereQuantityEquals'
	 * 
	 * @param quantity
	 */
	public static void findWhereQuantityEquals(double quantity)
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findWhereQuantityEquals(quantity);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUnityValueEquals'
	 * 
	 * @param unityValue
	 */
	public static void findWhereUnityValueEquals(double unityValue)
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findWhereUnityValueEquals(unityValue);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTotalValueEquals'
	 * 
	 * @param totalValue
	 */
	public static void findWhereTotalValueEquals(double totalValue)
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findWhereTotalValueEquals(totalValue);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStateEquals'
	 * 
	 * @param state
	 */
	public static void findWhereStateEquals(short state)
	{
		try {
			KardexDao _dao = getKardexDao();
			Kardex _result[] = _dao.findWhereStateEquals(state);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getKardexDao'
	 * 
	 * @return KardexDao
	 */
	public static KardexDao getKardexDao()
	{
		return KardexDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Kardex dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getProductId() );
		buf.append( ", " );
		buf.append( dto.getStoreId() );
		buf.append( ", " );
		buf.append( dto.getQuantity() );
		buf.append( ", " );
		buf.append( dto.getUnityValue() );
		buf.append( ", " );
		buf.append( dto.getTotalValue() );
		buf.append( ", " );
		buf.append( dto.getState() );
		System.out.println( buf.toString() );
	}

}
