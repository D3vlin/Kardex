<?xml version="1.0" encoding="ISO-8859-1"?>
<firestorm-project version="4.0.1">
  <name>MyProject</name>
  <description />
  <dbimport-config>
    <jdbc-datasource>MySQL Datasource</jdbc-datasource>
    <jdbc-catalog>bd_hulkstore</jdbc-catalog>
    <jdbc-schema />
    <sql-import-file />
    <sql-vendor />
    <import-tables>true</import-tables>
    <import-views>true</import-views>
    <import-procedures>true</import-procedures>
    <prefer-objects>false</prefer-objects>
    <sync-new>true</sync-new>
    <sync-existing>true</sync-existing>
    <sync-deleted>true</sync-deleted>
    <map-large-integer-to-bigdecimal>false</map-large-integer-to-bigdecimal>
    <verbose-logging>false</verbose-logging>
    <filter-list>
      <filter>document</filter>
      <filter>kardex</filter>
      <filter>kardex_detail</filter>
      <filter>product</filter>
      <filter>store</filter>
      <filter>unity</filter>
      <filter>users</filter>
    </filter-list>
  </dbimport-config>
  <database>
    <platform>MySQL</platform>
    <catalog-name>bd_hulkstore</catalog-name>
    <schema-name />
    <table-list>
      <table>
        <sql-name>users</sql-name>
        <java-name>Users</java-name>
        <primary-key>
          <column-list>
            <column>userId</column>
          </column-list>
        </primary-key>
        <column-list>
          <column>
            <java-name>userId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>userId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>userName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>userName</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>32</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>userPass</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>userPass</sql-name>
            <sql-type>CHAR</sql-type>
            <jdbc-type>CHAR</jdbc-type>
            <jdbc-precision>32</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>identification</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>identification</sql-name>
            <sql-type>CHAR</sql-type>
            <jdbc-type>CHAR</jdbc-type>
            <jdbc-precision>8</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>realName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>realName</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>40</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>surname</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>surname</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>40</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>userProfile</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>userProfile</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>state</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>state</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>userId = :userId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>userId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>userId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findWhereUserIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>userId = :userId</where>
            <order-by>userId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>userId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUserNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>userName = :userName</where>
            <order-by>userName</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>userName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>32</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUserPassEquals</name>
            <multi-finder>true</multi-finder>
            <where>userPass = :userPass</where>
            <order-by>userPass</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>userPass</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <jdbc-precision>32</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereIdentificationEquals</name>
            <multi-finder>true</multi-finder>
            <where>identification = :identification</where>
            <order-by>identification</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>identification</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>CHAR</jdbc-type>
                <jdbc-precision>8</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereRealNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>realName = :realName</where>
            <order-by>realName</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>realName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>40</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereSurnameEquals</name>
            <multi-finder>true</multi-finder>
            <where>surname = :surname</where>
            <order-by>surname</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>surname</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>40</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUserProfileEquals</name>
            <multi-finder>true</multi-finder>
            <where>userProfile = :userProfile</where>
            <order-by>userProfile</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>userProfile</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStateEquals</name>
            <multi-finder>true</multi-finder>
            <where>state = :state</where>
            <order-by>state</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>state</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>store</sql-name>
        <java-name>Store</java-name>
        <primary-key>
          <column-list>
            <column>storeId</column>
          </column-list>
        </primary-key>
        <column-list>
          <column>
            <java-name>storeId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>storeId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>storeName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>storeName</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>address</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>address</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>40</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>state</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>state</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>storeId = :storeId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>storeId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>storeId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findWhereStoreIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>storeId = :storeId</where>
            <order-by>storeId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>storeId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStoreNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>storeName = :storeName</where>
            <order-by>storeName</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>storeName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereAddressEquals</name>
            <multi-finder>true</multi-finder>
            <where>address = :address</where>
            <order-by>address</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>address</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>40</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStateEquals</name>
            <multi-finder>true</multi-finder>
            <where>state = :state</where>
            <order-by>state</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>state</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>product</sql-name>
        <java-name>Product</java-name>
        <primary-key>
          <column-list>
            <column>productId</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_product_unity</name>
            <parent-table>unity</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Unity</nav-to-parent-term>
            <nav-to-child-term>Product</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>unityId</column-name>
                <ref-column-name>unityId</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>productId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>productId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>productName</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>productName</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>50</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>unityId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>unityId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>state</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>state</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>productId = :productId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>productId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>productId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByUnity</name>
            <multi-finder>true</multi-finder>
            <where>unityId = :unityId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>unityId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereProductIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>productId = :productId</where>
            <order-by>productId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>productId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereProductNameEquals</name>
            <multi-finder>true</multi-finder>
            <where>productName = :productName</where>
            <order-by>productName</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>productName</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>50</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUnityIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>unityId = :unityId</where>
            <order-by>unityId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>unityId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStateEquals</name>
            <multi-finder>true</multi-finder>
            <where>state = :state</where>
            <order-by>state</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>state</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>unity</sql-name>
        <java-name>Unity</java-name>
        <primary-key>
          <column-list>
            <column>unityId</column>
          </column-list>
        </primary-key>
        <column-list>
          <column>
            <java-name>unityId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>unityId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>unityDescription</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>unityDescription</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>20</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>state</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>state</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>unityId = :unityId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>unityId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>unityId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findWhereUnityIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>unityId = :unityId</where>
            <order-by>unityId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>unityId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUnityDescriptionEquals</name>
            <multi-finder>true</multi-finder>
            <where>unityDescription = :unityDescription</where>
            <order-by>unityDescription</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>unityDescription</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>20</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStateEquals</name>
            <multi-finder>true</multi-finder>
            <where>state = :state</where>
            <order-by>state</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>state</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>document</sql-name>
        <java-name>Document</java-name>
        <primary-key>
          <column-list>
            <column>documentId</column>
          </column-list>
        </primary-key>
        <column-list>
          <column>
            <java-name>documentId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>documentId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>documentDescription</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>documentDescription</sql-name>
            <sql-type>TEXT</sql-type>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <jdbc-precision>65535</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>state</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>state</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>documentId = :documentId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>documentId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>documentId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findWhereDocumentIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>documentId = :documentId</where>
            <order-by>documentId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>documentId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDocumentDescriptionEquals</name>
            <multi-finder>true</multi-finder>
            <where>documentDescription = :documentDescription</where>
            <order-by>documentDescription</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>documentDescription</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>LONGVARCHAR</jdbc-type>
                <jdbc-precision>65535</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStateEquals</name>
            <multi-finder>true</multi-finder>
            <where>state = :state</where>
            <order-by>state</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>state</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>kardex</sql-name>
        <java-name>Kardex</java-name>
        <primary-key>
          <column-list>
            <column>productId</column>
            <column>storeId</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_kardex_product</name>
            <parent-table>product</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Product</nav-to-parent-term>
            <nav-to-child-term>Kardex</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>productId</column-name>
                <ref-column-name>productId</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_kardex_store</name>
            <parent-table>store</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Store</nav-to-parent-term>
            <nav-to-child-term>Kardex1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>storeId</column-name>
                <ref-column-name>storeId</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>productId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>productId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>storeId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>storeId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>quantity</java-name>
            <java-type>double</java-type>
            <java-default-value />
            <sql-name>quantity</sql-name>
            <sql-type>DOUBLE</sql-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <jdbc-precision>9</jdbc-precision>
            <jdbc-scale>2</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>unityValue</java-name>
            <java-type>double</java-type>
            <java-default-value />
            <sql-name>unityValue</sql-name>
            <sql-type>DOUBLE</sql-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <jdbc-precision>9</jdbc-precision>
            <jdbc-scale>2</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>totalValue</java-name>
            <java-type>double</java-type>
            <java-default-value />
            <sql-name>totalValue</sql-name>
            <sql-type>DOUBLE</sql-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <jdbc-precision>9</jdbc-precision>
            <jdbc-scale>2</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>state</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>state</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>productId = :productId AND storeId = :storeId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>productId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>storeId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>productId, storeId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByProduct</name>
            <multi-finder>true</multi-finder>
            <where>productId = :productId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>productId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByStore</name>
            <multi-finder>true</multi-finder>
            <where>storeId = :storeId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>storeId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereProductIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>productId = :productId</where>
            <order-by>productId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>productId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStoreIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>storeId = :storeId</where>
            <order-by>storeId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>storeId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereQuantityEquals</name>
            <multi-finder>true</multi-finder>
            <where>quantity = :quantity</where>
            <order-by>quantity</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>quantity</java-name>
                <java-type>double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <jdbc-precision>9</jdbc-precision>
                <jdbc-scale>2</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUnityValueEquals</name>
            <multi-finder>true</multi-finder>
            <where>unityValue = :unityValue</where>
            <order-by>unityValue</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>unityValue</java-name>
                <java-type>double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <jdbc-precision>9</jdbc-precision>
                <jdbc-scale>2</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTotalValueEquals</name>
            <multi-finder>true</multi-finder>
            <where>totalValue = :totalValue</where>
            <order-by>totalValue</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>totalValue</java-name>
                <java-type>double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <jdbc-precision>9</jdbc-precision>
                <jdbc-scale>2</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStateEquals</name>
            <multi-finder>true</multi-finder>
            <where>state = :state</where>
            <order-by>state</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>state</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
      <table>
        <sql-name>kardex_detail</sql-name>
        <java-name>KardexDetail</java-name>
        <primary-key>
          <column-list>
            <column>detailId</column>
            <column>productId</column>
            <column>storeId</column>
          </column-list>
        </primary-key>
        <foreign-key-list>
          <foreign-key>
            <name>fk_kardexDetail_document</name>
            <parent-table>document</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Document</nav-to-parent-term>
            <nav-to-child-term>KardexDetail</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>documentId</column-name>
                <ref-column-name>documentId</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_kardexDetail_kardex</name>
            <parent-table>kardex</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Kardex</nav-to-parent-term>
            <nav-to-child-term>KardexDetail1</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>productId</column-name>
                <ref-column-name>productId</ref-column-name>
              </column>
              <column>
                <column-name>storeId</column-name>
                <ref-column-name>storeId</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
          <foreign-key>
            <name>fk_kardexDetail_users</name>
            <parent-table>users</parent-table>
            <cardinality>1-many</cardinality>
            <nav-to-parent-term>Users</nav-to-parent-term>
            <nav-to-child-term>KardexDetail2</nav-to-child-term>
            <nav-to-parent>true</nav-to-parent>
            <nav-to-child>false</nav-to-child>
            <column-list>
              <column>
                <column-name>userId</column-name>
                <ref-column-name>userId</ref-column-name>
              </column>
            </column-list>
          </foreign-key>
        </foreign-key-list>
        <column-list>
          <column>
            <java-name>detailId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>detailId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>true</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>productId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>productId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>storeId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>storeId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>kardexDetailYear</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>kardexDetailYear</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>kardexDetailMonth</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>kardexDetailMonth</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>kardexDetailday</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>kardexDetailday</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>userId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>userId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>documentId</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>documentId</sql-name>
            <sql-type>INT UNSIGNED</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>documentNumber</java-name>
            <java-type>int</java-type>
            <java-default-value />
            <sql-name>documentNumber</sql-name>
            <sql-type>INT</sql-type>
            <jdbc-type>INTEGER</jdbc-type>
            <jdbc-precision>10</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>operation</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>operation</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>quantity</java-name>
            <java-type>double</java-type>
            <java-default-value />
            <sql-name>quantity</sql-name>
            <sql-type>DOUBLE</sql-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <jdbc-precision>9</jdbc-precision>
            <jdbc-scale>2</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>unityValue</java-name>
            <java-type>double</java-type>
            <java-default-value />
            <sql-name>unityValue</sql-name>
            <sql-type>DOUBLE</sql-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <jdbc-precision>9</jdbc-precision>
            <jdbc-scale>2</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>totalValue</java-name>
            <java-type>double</java-type>
            <java-default-value />
            <sql-name>totalValue</sql-name>
            <sql-type>DOUBLE</sql-type>
            <jdbc-type>DOUBLE</jdbc-type>
            <jdbc-precision>9</jdbc-precision>
            <jdbc-scale>2</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>observations</java-name>
            <java-type>java.lang.String</java-type>
            <java-default-value />
            <sql-name>observations</sql-name>
            <sql-type>VARCHAR</sql-type>
            <jdbc-type>VARCHAR</jdbc-type>
            <jdbc-precision>100</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>true</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
          <column>
            <java-name>state</java-name>
            <java-type>short</java-type>
            <java-default-value />
            <sql-name>state</sql-name>
            <sql-type>BIT</sql-type>
            <jdbc-type>BIT</jdbc-type>
            <jdbc-precision>1</jdbc-precision>
            <jdbc-scale>0</jdbc-scale>
            <nullable>false</nullable>
            <unique>false</unique>
            <auto-increment>false</auto-increment>
            <sequence-name />
          </column>
        </column-list>
        <finder-list>
          <finder>
            <name>findByPrimaryKey</name>
            <multi-finder>false</multi-finder>
            <where>detailId = :detailId AND productId = :productId AND storeId = :storeId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>detailId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>productId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>storeId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findAll</name>
            <multi-finder>true</multi-finder>
            <where />
            <order-by>detailId, productId, storeId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list />
          </finder>
          <finder>
            <name>findByDocument</name>
            <multi-finder>true</multi-finder>
            <where>documentId = :documentId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>documentId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByKardex</name>
            <multi-finder>true</multi-finder>
            <where>productId = :productId AND storeId = :storeId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>productId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
              <parameter>
                <java-name>storeId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findByUsers</name>
            <multi-finder>true</multi-finder>
            <where>userId = :userId</where>
            <order-by />
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>userId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDetailIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>detailId = :detailId</where>
            <order-by>detailId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>detailId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereProductIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>productId = :productId</where>
            <order-by>productId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>productId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStoreIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>storeId = :storeId</where>
            <order-by>storeId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>storeId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereKardexDetailYearEquals</name>
            <multi-finder>true</multi-finder>
            <where>kardexDetailYear = :kardexDetailYear</where>
            <order-by>kardexDetailYear</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>kardexDetailYear</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereKardexDetailMonthEquals</name>
            <multi-finder>true</multi-finder>
            <where>kardexDetailMonth = :kardexDetailMonth</where>
            <order-by>kardexDetailMonth</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>kardexDetailMonth</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereKardexDetaildayEquals</name>
            <multi-finder>true</multi-finder>
            <where>kardexDetailday = :kardexDetailday</where>
            <order-by>kardexDetailday</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>kardexDetailday</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUserIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>userId = :userId</where>
            <order-by>userId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>userId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDocumentIdEquals</name>
            <multi-finder>true</multi-finder>
            <where>documentId = :documentId</where>
            <order-by>documentId</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>documentId</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereDocumentNumberEquals</name>
            <multi-finder>true</multi-finder>
            <where>documentNumber = :documentNumber</where>
            <order-by>documentNumber</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>documentNumber</java-name>
                <java-type>int</java-type>
                <jdbc-type>INTEGER</jdbc-type>
                <jdbc-precision>10</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereOperationEquals</name>
            <multi-finder>true</multi-finder>
            <where>operation = :operation</where>
            <order-by>operation</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>operation</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereQuantityEquals</name>
            <multi-finder>true</multi-finder>
            <where>quantity = :quantity</where>
            <order-by>quantity</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>quantity</java-name>
                <java-type>double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <jdbc-precision>9</jdbc-precision>
                <jdbc-scale>2</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereUnityValueEquals</name>
            <multi-finder>true</multi-finder>
            <where>unityValue = :unityValue</where>
            <order-by>unityValue</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>unityValue</java-name>
                <java-type>double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <jdbc-precision>9</jdbc-precision>
                <jdbc-scale>2</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereTotalValueEquals</name>
            <multi-finder>true</multi-finder>
            <where>totalValue = :totalValue</where>
            <order-by>totalValue</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>totalValue</java-name>
                <java-type>double</java-type>
                <jdbc-type>DOUBLE</jdbc-type>
                <jdbc-precision>9</jdbc-precision>
                <jdbc-scale>2</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereObservationsEquals</name>
            <multi-finder>true</multi-finder>
            <where>observations = :observations</where>
            <order-by>observations</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>observations</java-name>
                <java-type>java.lang.String</java-type>
                <jdbc-type>VARCHAR</jdbc-type>
                <jdbc-precision>100</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
          <finder>
            <name>findWhereStateEquals</name>
            <multi-finder>true</multi-finder>
            <where>state = :state</where>
            <order-by>state</order-by>
            <query-type>WHERE</query-type>
            <parameter-list>
              <parameter>
                <java-name>state</java-name>
                <java-type>short</java-type>
                <jdbc-type>BIT</jdbc-type>
                <jdbc-precision>1</jdbc-precision>
                <jdbc-scale>0</jdbc-scale>
              </parameter>
            </parameter-list>
          </finder>
        </finder-list>
      </table>
    </table-list>
    <view-list />
    <procedure-list />
    <custom-sql-list />
  </database>
  <provider-options>
    <default-codegen-provider>j2se</default-codegen-provider>
    <provider name="j2se">
      <property key="app-name" value="myapp" />
      <property key="dao-strategy" value="jdbc" />
      <property key="delete-files" value="false" />
      <property key="dto-fields-public" value="false" />
      <property key="generate-dynamic-inserts" value="false" />
      <property key="generate-dynamic-updates" value="false" />
      <property key="jdbc-driver" value="com.mysql.cj.jdbc.Driver" />
      <property key="jdbc-pwd" value="mySql" />
      <property key="jdbc-table-aliases" value="false" />
      <property key="jdbc-url" value="jdbc:mysql://localhost:3306/bd_hulkstore?useSSL=false" />
      <property key="jdbc-user" value="root" />
      <property key="jdbc30-capable" value="true" />
      <property key="logging" value="stdout" />
      <property key="output-dir" value="C:\Users\JDUQUE\Desktop\HulkStore\FireStorm" />
      <property key="overwrite-resource-manager" value="true" />
      <property key="package-name" value="com.cidenet.hulkstore" />
      <property key="prefix-schema-name" value="true" />
    </provider>
  </provider-options>
</firestorm-project>

